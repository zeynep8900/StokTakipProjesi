// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StokTakip.Db;

#nullable disable

namespace StokTakip.Migrations
{
    [DbContext(typeof(StokTakipContext))]
    [Migration("20241116115425_MigrationName")]
    partial class MigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StokTakip.Modeller.DbBirimler", b =>
                {
                    b.Property<int>("BirimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BirimId"));

                    b.Property<string>("BirimAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BirimId");

                    b.ToTable("Birimler");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbKategoriler", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriId"));

                    b.Property<string>("KategoriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbKullanicilar", b =>
                {
                    b.Property<int>("KullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Yetki")
                        .HasColumnType("int");

                    b.HasKey("KullaniciId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbMusteriler", b =>
                {
                    b.Property<int>("MusteriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriId"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YetkiliAdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusteriId");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbStokCikis", b =>
                {
                    b.Property<int>("IslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IslemId"));

                    b.Property<float>("BirimFiyat")
                        .HasColumnType("real");

                    b.Property<int?>("DbTedarikcilerTedarikciId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<float>("Miktar")
                        .HasColumnType("real");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("IslemId");

                    b.HasIndex("DbTedarikcilerTedarikciId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("UrunId");

                    b.ToTable("StokCikis");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbStokGiris", b =>
                {
                    b.Property<int>("IslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IslemId"));

                    b.Property<float>("BirimFiyat")
                        .HasColumnType("real");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<float>("Miktar")
                        .HasColumnType("real");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("TedarikciId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("IslemId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("TedarikciId");

                    b.HasIndex("UrunId");

                    b.ToTable("StokGiris");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbTedarikciler", b =>
                {
                    b.Property<int>("TedarikciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TedarikciId"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YetkiliAdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TedarikciId");

                    b.ToTable("Tedarikciler");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbUrunler", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunId"));

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<float>("MaksStok")
                        .HasColumnType("real");

                    b.Property<float>("MinStok")
                        .HasColumnType("real");

                    b.Property<string>("UrunAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunId");

                    b.HasIndex("BirimId");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbStokCikis", b =>
                {
                    b.HasOne("StokTakip.Modeller.DbTedarikciler", null)
                        .WithMany("StokCikislar")
                        .HasForeignKey("DbTedarikcilerTedarikciId");

                    b.HasOne("StokTakip.Modeller.DbKullanicilar", "Kullanici")
                        .WithMany("StokCikislar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokTakip.Modeller.DbMusteriler", "Musteri")
                        .WithMany("StokCikislar")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokTakip.Modeller.DbUrunler", "Urun")
                        .WithMany("StokCikislar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Musteri");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbStokGiris", b =>
                {
                    b.HasOne("StokTakip.Modeller.DbKullanicilar", "Kullanici")
                        .WithMany("StokGirisler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokTakip.Modeller.DbTedarikciler", "Tedarikci")
                        .WithMany("StokGirisler")
                        .HasForeignKey("TedarikciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokTakip.Modeller.DbUrunler", "Urun")
                        .WithMany("StokGirisler")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Tedarikci");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbUrunler", b =>
                {
                    b.HasOne("StokTakip.Modeller.DbBirimler", "Birim")
                        .WithMany("Urunler")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StokTakip.Modeller.DbKategoriler", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbBirimler", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbKategoriler", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbKullanicilar", b =>
                {
                    b.Navigation("StokCikislar");

                    b.Navigation("StokGirisler");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbMusteriler", b =>
                {
                    b.Navigation("StokCikislar");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbTedarikciler", b =>
                {
                    b.Navigation("StokCikislar");

                    b.Navigation("StokGirisler");
                });

            modelBuilder.Entity("StokTakip.Modeller.DbUrunler", b =>
                {
                    b.Navigation("StokCikislar");

                    b.Navigation("StokGirisler");
                });
#pragma warning restore 612, 618
        }
    }
}
